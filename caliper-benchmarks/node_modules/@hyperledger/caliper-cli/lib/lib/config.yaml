#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Contains reusable setting profiles
settingProfiles:
    # Setting profile for compiling old grpc packages on node version 10 or greater (i.e., not matching v8.*)
    newNodeOldGrpc: &new-node-old-grpc
        # The regular expression to check against the "node -v" output
        versionRegexp: '^((?!v8\.).)*$'
        # Specifies the environment variables to set for npm install
        env:
          CXXFLAGS: "-Wno-error=class-memaccess -Wno-error=ignored-qualifiers -Wno-error=stringop-truncation -Wno-error=cast-function-type"
          CFLAGS: "-Wno-error=class-memaccess -Wno-error=ignored-qualifiers -Wno-error=stringop-truncation -Wno-error=cast-function-type"
            # Specifies arguments to set for npm install
        args: '--build-from-source'

# Specifies the supported target platforms
sut:
    # Specifies the available SDK bindings and their Node.js-specific install settings
    # IMPORTANT:
    # The Integration tests cache all the SUT bindings EXCEPT for the fabric:2.4 binding. Therefore
    # for those bindings if you want to update a binding with new version dependencies you need to
    # create a new version and update the integration tests explicitly to reference this new version.
    # For example if the current version of the fabric 2.2 binding is 2.2.14 and you want to update
    # the binding to include a new level of dependencies, you must create a 2.2.15 binding and update
    # the integration tests to reference this.
    # The exception is fabric:2.4 which isn't cached in the integration tests. This means you can modify
    # the 2.4 key without creating a new version and the integration tests will automatically pick it up.
    fabric:
        # The name/key of the SDK binding
        1.4: &fabric-sdk-v1
            packages: ['fabric-client@1.4.20', 'fabric-network@1.4.20','fs-extra@8.1.0']
        1.4.20: *fabric-sdk-v1
        1: *fabric-sdk-v1
        2.2: &fabric-sdk-v2
            packages: ['fabric-network@2.2.20']
        2.2.20: *fabric-sdk-v2
        2.4: &fabric-gateway
            packages: ['@hyperledger/fabric-gateway@1.5.0', '@grpc/grpc-js@1.10.3']
        2.5: *fabric-gateway
        3: *fabric-gateway
        fabric-gateway: *fabric-gateway

    ethereum:
        1.2.1:
            packages: ['web3@1.2.2']
        1.3: &ethereum-latest
            packages: ['web3@1.3.0']
        latest: *ethereum-latest

    besu:
        1.3.2:
            packages: ['web3@1.3.0']
        1.3:
            packages: ['web3@1.3.0']
        1.4: &besu-latest
            packages: ['web3@1.3.0']
        latest: *besu-latest
