{
  "version": 1.1,
  "tags": [
    {
      "name": "sl-alert",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "closable",
          "description": "Set to true to make the alert closable."
        },
        {
          "name": "duration",
          "description": "The length of time, in milliseconds, the alert will show before closing itself. If the user interacts with the\nalert before it closes (e.g. moves the mouse over it), the timer will restart."
        },
        {
          "name": "open",
          "description": "Indicates whether or not the alert is open. You can use this in lieu of the show/hide methods."
        },
        {
          "name": "type",
          "description": "The type of alert.",
          "values": [
            {
              "name": "danger"
            },
            {
              "name": "info"
            },
            {
              "name": "primary"
            },
            {
              "name": "success"
            },
            {
              "name": "warning"
            }
          ]
        }
      ]
    },
    {
      "name": "sl-animation",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "delay",
          "description": "The number of milliseconds to delay the start of the animation."
        },
        {
          "name": "direction",
          "description": "Determines the direction of playback as well as the behavior when reaching the end of an iteration.",
          "values": [
            {
              "name": "alternate"
            },
            {
              "name": "alternate-reverse"
            },
            {
              "name": "normal"
            },
            {
              "name": "reverse"
            }
          ]
        },
        {
          "name": "duration",
          "description": "The number of milliseconds each iteration of the animation takes to complete."
        },
        {
          "name": "easing",
          "description": "The rate of the animation's change over time."
        },
        {
          "name": "end-delay",
          "description": "The number of milliseconds to delay after the active period of an animation sequence."
        },
        {
          "name": "fill",
          "description": "Sets how the animation applies styles to its target before and after its execution.",
          "values": [
            {
              "name": "auto"
            },
            {
              "name": "backwards"
            },
            {
              "name": "both"
            },
            {
              "name": "forwards"
            },
            {
              "name": "none"
            }
          ]
        },
        {
          "name": "iteration-start",
          "description": "The offset at which to start the animation, usually between 0 (start) and 1 (end)."
        },
        {
          "name": "iterations",
          "description": "The number of iterations to run before the animation completes. Defaults to `Infinity`, which loops."
        },
        {
          "name": "name",
          "description": "The name of the animation to use."
        },
        {
          "name": "pause",
          "description": "Pauses the animation. The animation will resume when this prop is removed."
        },
        {
          "name": "playback-rate",
          "description": "Sets the animation's playback rate. The default is `1`, which plays the animation at a normal speed. Setting this\nto `2`, for example, will double the animation's speed. A negative value can be used to reverse the animation. This\nvalue can be changed without causing the animation to restart."
        }
      ]
    },
    {
      "name": "sl-avatar",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "alt",
          "description": "Alternative text for the image."
        },
        {
          "name": "image",
          "description": "The image source to use for the avatar."
        },
        {
          "name": "initials",
          "description": "Initials to use as a fallback when no image is available (1-2 characters max recommended)."
        },
        {
          "name": "shape",
          "description": "The shape of the avatar.",
          "values": [
            {
              "name": "circle"
            },
            {
              "name": "rounded"
            },
            {
              "name": "square"
            }
          ]
        }
      ]
    },
    {
      "name": "sl-badge",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "pill",
          "description": "Set to true to draw a pill-style badge with rounded edges."
        },
        {
          "name": "pulse",
          "description": "Set to true to make the badge pulsate to draw attention."
        },
        {
          "name": "type",
          "description": "The badge's type.",
          "values": [
            {
              "name": "danger"
            },
            {
              "name": "info"
            },
            {
              "name": "primary"
            },
            {
              "name": "success"
            },
            {
              "name": "text"
            },
            {
              "name": "warning"
            }
          ]
        }
      ]
    },
    {
      "name": "sl-button",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "caret",
          "description": "Set to true to draw the button with a caret for use with dropdowns, popovers, etc."
        },
        {
          "name": "circle",
          "description": "Set to true to draw a circle button."
        },
        {
          "name": "disabled",
          "description": "Set to true to disable the button."
        },
        {
          "name": "download",
          "description": "Tells the browser to download the linked file as this filename. Only used when `href` is set."
        },
        {
          "name": "href",
          "description": "When set, the underlying button will be rendered as an `<a>` with this `href` instead of a `<button>`."
        },
        {
          "name": "loading",
          "description": "Set to true to draw the button in a loading state."
        },
        {
          "name": "name",
          "description": "An optional name for the button. Ignored when `href` is set."
        },
        {
          "name": "pill",
          "description": "Set to true to draw a pill-style button with rounded edges."
        },
        {
          "name": "size",
          "description": "The button's size.",
          "values": [
            {
              "name": "large"
            },
            {
              "name": "medium"
            },
            {
              "name": "small"
            }
          ]
        },
        {
          "name": "submit",
          "description": "Indicates if activating the button should submit the form. Ignored when `href` is set."
        },
        {
          "name": "target",
          "description": "Tells the browser where to open the link. Only used when `href` is set.",
          "values": [
            {
              "name": "_blank"
            },
            {
              "name": "_parent"
            },
            {
              "name": "_self"
            },
            {
              "name": "_top"
            }
          ]
        },
        {
          "name": "type",
          "description": "The button's type.",
          "values": [
            {
              "name": "danger"
            },
            {
              "name": "default"
            },
            {
              "name": "info"
            },
            {
              "name": "primary"
            },
            {
              "name": "success"
            },
            {
              "name": "text"
            },
            {
              "name": "warning"
            }
          ]
        },
        {
          "name": "value",
          "description": "An optional value for the button. Ignored when `href` is set."
        }
      ]
    },
    {
      "name": "sl-button-group",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "label",
          "description": "A label to use for the button group's `aria-label` attribute."
        }
      ]
    },
    {
      "name": "sl-card",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": []
    },
    {
      "name": "sl-checkbox",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "checked",
          "description": "Set to true to draw the checkbox in a checked state."
        },
        {
          "name": "disabled",
          "description": "Set to true to disable the checkbox."
        },
        {
          "name": "indeterminate",
          "description": "Set to true to draw the checkbox in an indeterminate state."
        },
        {
          "name": "invalid",
          "description": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
        },
        {
          "name": "name",
          "description": "The checkbox's name attribute."
        },
        {
          "name": "required",
          "description": "Set to true to make the checkbox a required field."
        },
        {
          "name": "value",
          "description": "The checkbox's value attribute."
        }
      ]
    },
    {
      "name": "sl-color-picker",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "disabled",
          "description": "Set to true to disable the color picker."
        },
        {
          "name": "format",
          "description": "The format to use for the display value. If opacity is enabled, these will translate to HEXA, RGBA, and HSLA\nrespectively. The color picker will always accept user input in any format (including CSS color names) and convert\nit to the desired format.",
          "values": [
            {
              "name": "hex"
            },
            {
              "name": "hsl"
            },
            {
              "name": "rgb"
            }
          ]
        },
        {
          "name": "hoist",
          "description": "Enable this option to prevent the panel from being clipped when the component is placed inside a container with\n`overflow: auto|scroll`."
        },
        {
          "name": "inline",
          "description": "Set to true to render the color picker inline rather than inside a dropdown."
        },
        {
          "name": "invalid",
          "description": "This will be true when the control is in an invalid state. Validity is determined by the `setCustomValidity()`\nmethod using the browser's constraint validation API."
        },
        {
          "name": "name",
          "description": "The input's name attribute."
        },
        {
          "name": "no-format-toggle",
          "description": "Removes the format toggle."
        },
        {
          "name": "opacity",
          "description": "Whether to show the opacity slider."
        },
        {
          "name": "size",
          "description": "Determines the size of the color picker's trigger. This has no effect on inline color pickers.",
          "values": [
            {
              "name": "large"
            },
            {
              "name": "medium"
            },
            {
              "name": "small"
            }
          ]
        },
        {
          "name": "uppercase",
          "description": "By default, the value will be set in lowercase. Set this to true to set it in uppercase instead."
        },
        {
          "name": "value",
          "description": "The current color."
        }
      ]
    },
    {
      "name": "sl-details",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "disabled",
          "description": "Set to true to prevent the user from toggling the details."
        },
        {
          "name": "open",
          "description": "Indicates whether or not the details is open. You can use this in lieu of the show/hide methods."
        },
        {
          "name": "summary",
          "description": "The summary to show in the details header. If you need to display HTML, use the `summary` slot instead."
        }
      ]
    },
    {
      "name": "sl-dialog",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "label",
          "description": "The dialog's label as displayed in the header. You should always include a relevant label even when using\n`no-header`, as it is required for proper accessibility."
        },
        {
          "name": "no-header",
          "description": "Set to true to disable the header. This will also remove the default close button, so please ensure you provide an\neasy, accessible way for users to dismiss the dialog."
        },
        {
          "name": "open",
          "description": "Indicates whether or not the dialog is open. You can use this in lieu of the show/hide methods."
        }
      ]
    },
    {
      "name": "sl-drawer",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "contained",
          "description": "By default, the drawer slides out of its containing block (usually the viewport). To make the drawer slide out of\nits parent element, set this prop and add `position: relative` to the parent."
        },
        {
          "name": "label",
          "description": "The drawer's label as displayed in the header. You should always include a relevant label even when using\n`no-header`, as it is required for proper accessibility."
        },
        {
          "name": "no-header",
          "description": "Removes the header. This will also remove the default close button, so please ensure you provide an easy,\naccessible way for users to dismiss the drawer."
        },
        {
          "name": "open",
          "description": "Indicates whether or not the drawer is open. You can use this in lieu of the show/hide methods."
        },
        {
          "name": "placement",
          "description": "The direction from which the drawer will open.",
          "values": [
            {
              "name": "bottom"
            },
            {
              "name": "left"
            },
            {
              "name": "right"
            },
            {
              "name": "top"
            }
          ]
        }
      ]
    },
    {
      "name": "sl-dropdown",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "close-on-select",
          "description": "Determines whether the dropdown should hide when a menu item is selected."
        },
        {
          "name": "distance",
          "description": "The distance in pixels from which to offset the panel away from its trigger."
        },
        {
          "name": "hoist",
          "description": "Enable this option to prevent the panel from being clipped when the component is placed inside a container with\n`overflow: auto|scroll`."
        },
        {
          "name": "open",
          "description": "Indicates whether or not the dropdown is open. You can use this in lieu of the show/hide methods."
        },
        {
          "name": "placement",
          "description": "The preferred placement of the dropdown panel. Note that the actual placement may vary as needed to keep the panel\ninside of the viewport.",
          "values": [
            {
              "name": "bottom"
            },
            {
              "name": "bottom-end"
            },
            {
              "name": "bottom-start"
            },
            {
              "name": "left"
            },
            {
              "name": "left-end"
            },
            {
              "name": "left-start"
            },
            {
              "name": "right"
            },
            {
              "name": "right-end"
            },
            {
              "name": "right-start"
            },
            {
              "name": "top"
            },
            {
              "name": "top-end"
            },
            {
              "name": "top-start"
            }
          ]
        },
        {
          "name": "skidding",
          "description": "The distance in pixels from which to offset the panel along its trigger."
        }
      ]
    },
    {
      "name": "sl-form",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "novalidate",
          "description": "Prevent the form from validating inputs before submitting."
        }
      ]
    },
    {
      "name": "sl-format-bytes",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "locale",
          "description": "The locale to use when formatting the number."
        },
        {
          "name": "unit",
          "description": "The unit to display.",
          "values": [
            {
              "name": "bits"
            },
            {
              "name": "bytes"
            }
          ]
        },
        {
          "name": "value",
          "description": "The number to format in bytes."
        }
      ]
    },
    {
      "name": "sl-format-date",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "date",
          "description": "The date/time to format. If not set, the current date and time will be used."
        },
        {
          "name": "day",
          "description": "The format for displaying the day.",
          "values": [
            {
              "name": "2-digit"
            },
            {
              "name": "numeric"
            }
          ]
        },
        {
          "name": "era",
          "description": "The format for displaying the era.",
          "values": [
            {
              "name": "long"
            },
            {
              "name": "narrow"
            },
            {
              "name": "short"
            }
          ]
        },
        {
          "name": "hour",
          "description": "The format for displaying the hour.",
          "values": [
            {
              "name": "2-digit"
            },
            {
              "name": "numeric"
            }
          ]
        },
        {
          "name": "hour-format",
          "description": "When set, 24 hour time will always be used.",
          "values": [
            {
              "name": "12"
            },
            {
              "name": "24"
            },
            {
              "name": "auto"
            }
          ]
        },
        {
          "name": "locale",
          "description": "The locale to use when formatting the date/time."
        },
        {
          "name": "minute",
          "description": "The format for displaying the minute.",
          "values": [
            {
              "name": "2-digit"
            },
            {
              "name": "numeric"
            }
          ]
        },
        {
          "name": "month",
          "description": "The format for displaying the month.",
          "values": [
            {
              "name": "2-digit"
            },
            {
              "name": "long"
            },
            {
              "name": "narrow"
            },
            {
              "name": "numeric"
            },
            {
              "name": "short"
            }
          ]
        },
        {
          "name": "second",
          "description": "The format for displaying the second.",
          "values": [
            {
              "name": "2-digit"
            },
            {
              "name": "numeric"
            }
          ]
        },
        {
          "name": "time-zone",
          "description": "The time zone to express the time in."
        },
        {
          "name": "time-zone-name",
          "description": "The format for displaying the time.",
          "values": [
            {
              "name": "long"
            },
            {
              "name": "short"
            }
          ]
        },
        {
          "name": "weekday",
          "description": "The format for displaying the weekday.",
          "values": [
            {
              "name": "long"
            },
            {
              "name": "narrow"
            },
            {
              "name": "short"
            }
          ]
        },
        {
          "name": "year",
          "description": "The format for displaying the year.",
          "values": [
            {
              "name": "2-digit"
            },
            {
              "name": "numeric"
            }
          ]
        }
      ]
    },
    {
      "name": "sl-format-number",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "currency",
          "description": "The currency to use when formatting. Must be an ISO 4217 currency code such as `USD` or `EUR`."
        },
        {
          "name": "currency-display",
          "description": "How to display the currency.",
          "values": [
            {
              "name": "code"
            },
            {
              "name": "name"
            },
            {
              "name": "narrowSymbol"
            },
            {
              "name": "symbol"
            }
          ]
        },
        {
          "name": "locale",
          "description": "The locale to use when formatting the number."
        },
        {
          "name": "maximum-fraction-digits",
          "description": "The maximum number of fraction digits to use. Possible values are 0 - 20."
        },
        {
          "name": "maximum-significant-digits",
          "description": "The maximum number of significant digits to use,. Possible values are 1 - 21."
        },
        {
          "name": "minimum-fraction-digits",
          "description": "The minimum number of fraction digits to use. Possible values are 0 - 20."
        },
        {
          "name": "minimum-integer-digits",
          "description": "The minimum number of integer digits to use. Possible values are 1 - 21."
        },
        {
          "name": "minimum-significant-digits",
          "description": "The minimum number of significant digits to use. Possible values are 1 - 21."
        },
        {
          "name": "no-grouping",
          "description": "Turns off grouping separators."
        },
        {
          "name": "type",
          "description": "The formatting style to use.",
          "values": [
            {
              "name": "currency"
            },
            {
              "name": "decimal"
            },
            {
              "name": "percent"
            }
          ]
        },
        {
          "name": "value",
          "description": "The number to format."
        }
      ]
    },
    {
      "name": "sl-icon",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "label",
          "description": "An alternative description to use for accessibility. If omitted, the name or src will be used to generate it."
        },
        {
          "name": "library",
          "description": "The name of a registered custom icon library."
        },
        {
          "name": "name",
          "description": "The name of the icon to draw."
        },
        {
          "name": "src",
          "description": "An external URL of an SVG file."
        }
      ]
    },
    {
      "name": "sl-icon-button",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "disabled",
          "description": "Set to true to disable the button."
        },
        {
          "name": "label",
          "description": "A description that gets read by screen readers and other assistive devices. For optimal accessibility, you should\nalways include a label that describes what the icon button does."
        },
        {
          "name": "library",
          "description": "The name of a registered custom icon library."
        },
        {
          "name": "name",
          "description": "The name of the icon to draw."
        },
        {
          "name": "src",
          "description": "An external URL of an SVG file."
        }
      ]
    },
    {
      "name": "sl-icon-library",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "name",
          "description": "The name of the icon library."
        }
      ]
    },
    {
      "name": "sl-image-comparer",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "position",
          "description": "The position of the divider as a percentage."
        }
      ]
    },
    {
      "name": "sl-include",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "allow-scripts",
          "description": "Allows included scripts to be executed. You must ensure the content you're including is trusted, otherwise this\noption can lead to XSS vulnerabilities in your app!"
        },
        {
          "name": "mode",
          "description": "The fetch mode to use.",
          "values": [
            {
              "name": "cors"
            },
            {
              "name": "no-cors"
            },
            {
              "name": "same-origin"
            }
          ]
        },
        {
          "name": "src",
          "description": "The location of the HTML file to include."
        }
      ]
    },
    {
      "name": "sl-input",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "autocapitalize",
          "description": "The input's autocaptialize attribute."
        },
        {
          "name": "autocomplete",
          "description": "The input's autocomplete attribute."
        },
        {
          "name": "autocorrect",
          "description": "The input's autocorrect attribute."
        },
        {
          "name": "autofocus",
          "description": "The input's autofocus attribute."
        },
        {
          "name": "clearable",
          "description": "Set to true to add a clear button when the input is populated."
        },
        {
          "name": "disabled",
          "description": "Set to true to disable the input."
        },
        {
          "name": "help-text",
          "description": "The input's help text. Alternatively, you can use the help-text slot."
        },
        {
          "name": "inputmode",
          "description": "The input's inputmode attribute.",
          "values": [
            {
              "name": "decimal"
            },
            {
              "name": "email"
            },
            {
              "name": "none"
            },
            {
              "name": "numeric"
            },
            {
              "name": "search"
            },
            {
              "name": "tel"
            },
            {
              "name": "text"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "invalid",
          "description": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
        },
        {
          "name": "label",
          "description": "The input's label. Alternatively, you can use the label slot."
        },
        {
          "name": "max",
          "description": "The input's maximum value."
        },
        {
          "name": "maxlength",
          "description": "The maximum length of input that will be considered valid."
        },
        {
          "name": "min",
          "description": "The input's minimum value."
        },
        {
          "name": "minlength",
          "description": "The minimum length of input that will be considered valid."
        },
        {
          "name": "name",
          "description": "The input's name attribute."
        },
        {
          "name": "pattern",
          "description": "A pattern to validate input against."
        },
        {
          "name": "pill",
          "description": "Set to true to draw a pill-style input with rounded edges."
        },
        {
          "name": "placeholder",
          "description": "The input's placeholder text."
        },
        {
          "name": "readonly",
          "description": "Set to true to make the input readonly."
        },
        {
          "name": "required",
          "description": "Set to true to make the input a required field."
        },
        {
          "name": "size",
          "description": "The input's size.",
          "values": [
            {
              "name": "large"
            },
            {
              "name": "medium"
            },
            {
              "name": "small"
            }
          ]
        },
        {
          "name": "spellcheck",
          "description": "Enables spell checking on the input."
        },
        {
          "name": "step",
          "description": "The input's step attribute."
        },
        {
          "name": "toggle-password",
          "description": "Set to true to add a password toggle button for password inputs."
        },
        {
          "name": "type",
          "description": "The input's type.",
          "values": [
            {
              "name": "email"
            },
            {
              "name": "number"
            },
            {
              "name": "password"
            },
            {
              "name": "search"
            },
            {
              "name": "tel"
            },
            {
              "name": "text"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "value",
          "description": "The input's value attribute."
        }
      ]
    },
    {
      "name": "sl-menu",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": []
    },
    {
      "name": "sl-menu-divider",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": []
    },
    {
      "name": "sl-menu-item",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "checked",
          "description": "Set to true to draw the item in a checked state."
        },
        {
          "name": "disabled",
          "description": "Set to true to draw the menu item in a disabled state."
        },
        {
          "name": "value",
          "description": "A unique value to store in the menu item."
        }
      ]
    },
    {
      "name": "sl-menu-label",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": []
    },
    {
      "name": "sl-progress-bar",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "indeterminate",
          "description": "When true, percentage is ignored, the label is hidden, and the progress bar is drawn in an indeterminate state."
        },
        {
          "name": "percentage",
          "description": "The progress bar's percentage, 0 to 100."
        }
      ]
    },
    {
      "name": "sl-progress-ring",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "percentage",
          "description": "The current progress percentage, 0 - 100."
        },
        {
          "name": "size",
          "description": "The size of the progress ring in pixels."
        },
        {
          "name": "stroke-width",
          "description": "The stroke width of the progress ring in pixels."
        }
      ]
    },
    {
      "name": "sl-radio",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "checked",
          "description": "Set to true to draw the radio in a checked state."
        },
        {
          "name": "disabled",
          "description": "Set to true to disable the radio."
        },
        {
          "name": "invalid",
          "description": "This will be true when the control is in an invalid state. Validity in range inputs is determined by the message\nprovided by the `setCustomValidity` method."
        },
        {
          "name": "name",
          "description": "The radio's name attribute."
        },
        {
          "name": "value",
          "description": "The radio's value attribute."
        }
      ]
    },
    {
      "name": "sl-range",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "disabled",
          "description": "Set to true to disable the input."
        },
        {
          "name": "invalid",
          "description": "This will be true when the control is in an invalid state. Validity in range inputs is determined by the message\nprovided by the `setCustomValidity` method."
        },
        {
          "name": "max",
          "description": "The input's max attribute."
        },
        {
          "name": "min",
          "description": "The input's min attribute."
        },
        {
          "name": "name",
          "description": "The input's name attribute."
        },
        {
          "name": "step",
          "description": "The input's step attribute."
        },
        {
          "name": "tooltip",
          "description": "The preferred placedment of the tooltip.",
          "values": [
            {
              "name": "bottom"
            },
            {
              "name": "none"
            },
            {
              "name": "top"
            }
          ]
        },
        {
          "name": "value",
          "description": "The input's value attribute."
        }
      ]
    },
    {
      "name": "sl-rating",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "disabled",
          "description": "Disables the rating."
        },
        {
          "name": "max",
          "description": "The highest rating to show."
        },
        {
          "name": "precision",
          "description": "The minimum increment value allowed by the control."
        },
        {
          "name": "readonly",
          "description": "Makes the rating readonly."
        },
        {
          "name": "value",
          "description": "The current rating."
        }
      ]
    },
    {
      "name": "sl-relative-time",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "date",
          "description": "The date from which to calculate time from."
        },
        {
          "name": "format",
          "description": "The formatting style to use.",
          "values": [
            {
              "name": "long"
            },
            {
              "name": "narrow"
            },
            {
              "name": "short"
            }
          ]
        },
        {
          "name": "locale",
          "description": "The locale to use when formatting the number."
        },
        {
          "name": "numeric",
          "description": "When `auto`, values such as \"yesterday\" and \"tomorrow\" will be shown when possible. When `always`, values such as\n\"1 day ago\" and \"in 1 day\" will be shown.",
          "values": [
            {
              "name": "always"
            },
            {
              "name": "auto"
            }
          ]
        },
        {
          "name": "sync",
          "description": "Keep the displayed value up to date as time passes."
        }
      ]
    },
    {
      "name": "sl-resize-observer",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": []
    },
    {
      "name": "sl-responsive-embed",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "aspect-ratio",
          "description": "The aspect ratio of the embedded media in the format of `width:height`, e.g. `16:9`, `4:3`, or `1:1`. Ratios not in\nthis format will be ignored."
        }
      ]
    },
    {
      "name": "sl-select",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "clearable",
          "description": "Set to true to add a clear button when the select is populated."
        },
        {
          "name": "disabled",
          "description": "Set to true to disable the select control."
        },
        {
          "name": "help-text",
          "description": "The select's help text. Alternatively, you can use the help-text slot."
        },
        {
          "name": "hoist",
          "description": "Enable this option to prevent the panel from being clipped when the component is placed inside a container with\n`overflow: auto|scroll`."
        },
        {
          "name": "invalid",
          "description": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
        },
        {
          "name": "label",
          "description": "The select's label. Alternatively, you can use the label slot."
        },
        {
          "name": "max-tags-visible",
          "description": "The maximum number of tags to show when `multiple` is true. After the maximum, \"+n\" will be shown to indicate the\nnumber of additional items that are selected. Set to -1 to remove the limit."
        },
        {
          "name": "multiple",
          "description": "Set to true to enable multiselect."
        },
        {
          "name": "name",
          "description": "The select's name."
        },
        {
          "name": "pill",
          "description": "Set to true to draw a pill-style select with rounded edges."
        },
        {
          "name": "placeholder",
          "description": "The select's placeholder text."
        },
        {
          "name": "required",
          "description": "The select's required attribute."
        },
        {
          "name": "size",
          "description": "The select's size.",
          "values": [
            {
              "name": "large"
            },
            {
              "name": "medium"
            },
            {
              "name": "small"
            }
          ]
        },
        {
          "name": "value",
          "description": "The value of the control. This will be a string or an array depending on `multiple`."
        }
      ]
    },
    {
      "name": "sl-skeleton",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "effect",
          "description": "Determines which effect the skeleton will use.",
          "values": [
            {
              "name": "none"
            },
            {
              "name": "pulse"
            },
            {
              "name": "sheen"
            }
          ]
        }
      ]
    },
    {
      "name": "sl-spinner",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": []
    },
    {
      "name": "sl-switch",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "checked",
          "description": "Set to true to draw the switch in a checked state."
        },
        {
          "name": "disabled",
          "description": "Set to true to disable the switch."
        },
        {
          "name": "invalid",
          "description": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
        },
        {
          "name": "name",
          "description": "The switch's name attribute."
        },
        {
          "name": "required",
          "description": "Set to true to make the switch a required field."
        },
        {
          "name": "value",
          "description": "The switch's value attribute."
        }
      ]
    },
    {
      "name": "sl-tab",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "active",
          "description": "Set to true to draw the tab in an active state."
        },
        {
          "name": "closable",
          "description": "When true, the tab will be rendered with a close icon."
        },
        {
          "name": "disabled",
          "description": "Set to true to draw the tab in a disabled state."
        },
        {
          "name": "panel",
          "description": "The name of the tab panel the tab will control. The panel must be located in the same tab group."
        }
      ]
    },
    {
      "name": "sl-tab-group",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "no-scroll-controls",
          "description": "Disables the scroll arrows that appear when tabs overflow."
        },
        {
          "name": "placement",
          "description": "The placement of the tabs.",
          "values": [
            {
              "name": "bottom"
            },
            {
              "name": "left"
            },
            {
              "name": "right"
            },
            {
              "name": "top"
            }
          ]
        }
      ]
    },
    {
      "name": "sl-tab-panel",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "active",
          "description": "When true, the tab panel will be shown."
        },
        {
          "name": "name",
          "description": "The tab panel's name."
        }
      ]
    },
    {
      "name": "sl-tag",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "clearable",
          "description": "Set to true to make the tag clearable."
        },
        {
          "name": "pill",
          "description": "Set to true to draw a pill-style tag with rounded edges."
        },
        {
          "name": "size",
          "description": "The tag's size.",
          "values": [
            {
              "name": "large"
            },
            {
              "name": "medium"
            },
            {
              "name": "small"
            }
          ]
        },
        {
          "name": "type",
          "description": "The tag's type.",
          "values": [
            {
              "name": "danger"
            },
            {
              "name": "info"
            },
            {
              "name": "primary"
            },
            {
              "name": "success"
            },
            {
              "name": "text"
            },
            {
              "name": "warning"
            }
          ]
        }
      ]
    },
    {
      "name": "sl-textarea",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "autocapitalize",
          "description": "The textarea's autocaptialize attribute."
        },
        {
          "name": "autocomplete",
          "description": "The textarea's autocomplete attribute."
        },
        {
          "name": "autocorrect",
          "description": "The textarea's autocorrect attribute."
        },
        {
          "name": "autofocus",
          "description": "The textarea's autofocus attribute."
        },
        {
          "name": "disabled",
          "description": "Set to true to disable the textarea."
        },
        {
          "name": "help-text",
          "description": "The textarea's help text. Alternatively, you can use the help-text slot."
        },
        {
          "name": "inputmode",
          "description": "The textarea's inputmode attribute.",
          "values": [
            {
              "name": "decimal"
            },
            {
              "name": "email"
            },
            {
              "name": "none"
            },
            {
              "name": "numeric"
            },
            {
              "name": "search"
            },
            {
              "name": "tel"
            },
            {
              "name": "text"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "invalid",
          "description": "This will be true when the control is in an invalid state. Validity is determined by props such as `required`,\n`minlength`, and `maxlength` using the browser's constraint validation API."
        },
        {
          "name": "label",
          "description": "The textarea's label. Alternatively, you can use the label slot."
        },
        {
          "name": "maxlength",
          "description": "The maximum length of input that will be considered valid."
        },
        {
          "name": "minlength",
          "description": "The minimum length of input that will be considered valid."
        },
        {
          "name": "name",
          "description": "The textarea's name attribute."
        },
        {
          "name": "placeholder",
          "description": "The textarea's placeholder text."
        },
        {
          "name": "readonly",
          "description": "Set to true for a readonly textarea."
        },
        {
          "name": "required",
          "description": "The textarea's required attribute."
        },
        {
          "name": "resize",
          "description": "Controls how the textarea can be resized.",
          "values": [
            {
              "name": "auto"
            },
            {
              "name": "none"
            },
            {
              "name": "vertical"
            }
          ]
        },
        {
          "name": "rows",
          "description": "The number of rows to display by default."
        },
        {
          "name": "size",
          "description": "The textarea's size.",
          "values": [
            {
              "name": "large"
            },
            {
              "name": "medium"
            },
            {
              "name": "small"
            }
          ]
        },
        {
          "name": "spellcheck",
          "description": "The textarea's spellcheck attribute."
        },
        {
          "name": "value",
          "description": "The textarea's value attribute."
        }
      ]
    },
    {
      "name": "sl-theme",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "name",
          "description": "The name of the theme to use. The user is responsible for including the associated stylesheet(s). Supportive themes\nmust adhere to theme guidelines by exposing a class that follows the `sl-theme-{name}` convention."
        }
      ]
    },
    {
      "name": "sl-tooltip",
      "description": {
        "kind": "markdown",
        "value": ""
      },
      "attributes": [
        {
          "name": "content",
          "description": "The tooltip's content."
        },
        {
          "name": "disabled",
          "description": "Set to true to disable the tooltip so it won't show when triggered."
        },
        {
          "name": "distance",
          "description": "The distance in pixels from which to offset the tooltip away from its target."
        },
        {
          "name": "open",
          "description": "Indicates whether or not the tooltip is open. You can use this in lieu of the show/hide methods."
        },
        {
          "name": "placement",
          "description": "The preferred placement of the tooltip. Note that the actual placement may vary as needed to keep the tooltip\ninside of the viewport.",
          "values": [
            {
              "name": "bottom"
            },
            {
              "name": "bottom-end"
            },
            {
              "name": "bottom-start"
            },
            {
              "name": "left"
            },
            {
              "name": "left-end"
            },
            {
              "name": "left-start"
            },
            {
              "name": "right"
            },
            {
              "name": "right-end"
            },
            {
              "name": "right-start"
            },
            {
              "name": "top"
            },
            {
              "name": "top-end"
            },
            {
              "name": "top-start"
            }
          ]
        },
        {
          "name": "skidding",
          "description": "The distance in pixels from which to offset the tooltip along its target."
        },
        {
          "name": "trigger",
          "description": "Controls how the tooltip is activated. Possible options include `click`, `hover`, `focus`, and `manual`. Multiple\noptions can be passed by separating them with a space. When manual is used, the tooltip must be activated\nprogrammatically."
        }
      ]
    }
  ]
}