:host {
  position: relative;
  box-sizing: border-box;
}
:host *, :host *:before, :host *:after {
  box-sizing: inherit;
}

.form-control .form-control__label {
  display: none;
}
.form-control .form-control__help-text {
  display: none;
}

.form-control--has-label .form-control__label {
  display: inline-block;
  color: var(--sl-input-label-color);
  margin-bottom: var(--sl-spacing-xxx-small);
}
.form-control--has-label.form-control--small .form-control__label {
  font-size: var(--sl-input-label-font-size-small);
}
.form-control--has-label.form-control--medium .form-control__label {
  font-size: var(--sl-input-label-font-size-medium);
}
.form-control--has-label.form-control--large .form-control_label {
  font-size: var(--sl-input-label-font-size-large);
}

.form-control--has-help-text .form-control__help-text {
  display: block;
  color: var(--sl-input-help-text-color);
}
.form-control--has-help-text .form-control__help-text ::slotted(*) {
  margin-top: var(--sl-spacing-xxx-small);
}
.form-control--has-help-text.form-control--small .form-control__help-text {
  font-size: var(--sl-input-help-text-font-size-small);
}
.form-control--has-help-text.form-control--medium .form-control__help-text {
  font-size: var(--sl-input-help-text-font-size-medium);
}
.form-control--has-help-text.form-control--large .form-control__help-text {
  font-size: var(--sl-input-help-text-font-size-large);
}

/**
 * @prop --focus-ring: The focus ring style to use when the control receives focus, a `box-shadow` property.
 */
:host {
  --focus-ring: 0 0 0 var(--sl-focus-ring-width) var(--sl-focus-ring-color-primary);
  display: block;
}

.input {
  flex: 1 1 auto;
  display: inline-flex;
  align-items: stretch;
  justify-content: start;
  position: relative;
  width: 100%;
  font-family: var(--sl-input-font-family);
  font-weight: var(--sl-input-font-weight);
  letter-spacing: var(--sl-input-letter-spacing);
  background-color: var(--sl-input-background-color);
  border: solid var(--sl-input-border-width) var(--sl-input-border-color);
  vertical-align: middle;
  overflow: hidden;
  transition: var(--sl-transition-fast) color, var(--sl-transition-fast) border, var(--sl-transition-fast) box-shadow;
  cursor: text;
}
.input:hover:not(.input--disabled) {
  background-color: var(--sl-input-background-color-hover);
  border-color: var(--sl-input-border-color-hover);
}
.input:hover:not(.input--disabled) .input__control {
  color: var(--sl-input-color-hover);
}
.input.input--focused:not(.input--disabled) {
  background-color: var(--sl-input-background-color-focus);
  border-color: var(--sl-input-border-color-focus);
  box-shadow: var(--focus-ring);
}
.input.input--focused:not(.input--disabled) .input__control {
  color: var(--sl-input-color-focus);
}
.input.input--disabled {
  background-color: var(--sl-input-background-color-disabled);
  border-color: var(--sl-input-border-color-disabled);
  opacity: 0.5;
  cursor: not-allowed;
}
.input.input--disabled .input__control {
  color: var(--sl-input-color-disabled);
}
.input.input--disabled .input__control::placeholder {
  color: var(--sl-input-placeholder-color-disabled);
}

.input__control {
  flex: 1 1 auto;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  min-width: 0;
  height: 100%;
  color: var(--sl-input-color);
  border: none;
  background: none;
  box-shadow: none;
  padding: 0;
  margin: 0;
  cursor: inherit;
  -webkit-appearance: none;
}
.input__control::-webkit-search-decoration, .input__control::-webkit-search-cancel-button, .input__control::-webkit-search-results-button, .input__control::-webkit-search-results-decoration {
  -webkit-appearance: none;
}
.input__control:-webkit-autofill, .input__control:-webkit-autofill:hover, .input__control:-webkit-autofill:focus, .input__control:-webkit-autofill:active {
  box-shadow: 0 0 0 var(--sl-input-height-large) var(--sl-input-background-color-hover) inset !important;
  -webkit-text-fill-color: var(--sl-color-primary-500);
}
.input__control::placeholder {
  color: var(--sl-input-placeholder-color);
  user-select: none;
}
.input__control:focus {
  outline: none;
}

.input__prefix,
.input__suffix {
  display: inline-flex;
  flex: 0 0 auto;
  align-items: center;
  cursor: default;
}
.input__prefix ::slotted(sl-icon),
.input__suffix ::slotted(sl-icon) {
  color: var(--sl-input-icon-color);
}

.input--small {
  border-radius: var(--sl-input-border-radius-small);
  font-size: var(--sl-input-font-size-small);
  height: var(--sl-input-height-small);
}
.input--small .input__control {
  height: calc(var(--sl-input-height-small) - var(--sl-input-border-width) * 2);
  margin: 0 var(--sl-input-spacing-small);
}
.input--small .input__clear,
.input--small .input__password-toggle {
  margin-right: var(--sl-input-spacing-small);
}
.input--small .input__prefix ::slotted(*) {
  margin-left: var(--sl-input-spacing-small);
}
.input--small .input__suffix ::slotted(*) {
  margin-right: var(--sl-input-spacing-small);
}

.input--medium {
  border-radius: var(--sl-input-border-radius-medium);
  font-size: var(--sl-input-font-size-medium);
  height: var(--sl-input-height-medium);
}
.input--medium .input__control {
  height: calc(var(--sl-input-height-medium) - var(--sl-input-border-width) * 2);
  margin: 0 var(--sl-input-spacing-medium);
}
.input--medium .input__clear,
.input--medium .input__password-toggle {
  margin-right: var(--sl-input-spacing-medium);
}
.input--medium .input__prefix ::slotted(*) {
  margin-left: var(--sl-input-spacing-medium);
}
.input--medium .input__suffix ::slotted(*) {
  margin-right: var(--sl-input-spacing-medium);
}

.input--large {
  border-radius: var(--sl-input-border-radius-large);
  font-size: var(--sl-input-font-size-large);
  height: var(--sl-input-height-large);
}
.input--large .input__control {
  height: calc(var(--sl-input-height-large) - var(--sl-input-border-width) * 2);
  margin: 0 var(--sl-input-spacing-large);
}
.input--large .input__clear,
.input--large .input__password-toggle {
  margin-right: var(--sl-input-spacing-large);
}
.input--large .input__prefix ::slotted(*) {
  margin-left: var(--sl-input-spacing-large);
}
.input--large .input__suffix ::slotted(*) {
  margin-right: var(--sl-input-spacing-large);
}

.input--pill.input--small {
  border-radius: var(--sl-input-height-small);
}
.input--pill.input--medium {
  border-radius: var(--sl-input-height-medium);
}
.input--pill.input--large {
  border-radius: var(--sl-input-height-large);
}

.input__clear,
.input__password-toggle {
  display: inline-flex;
  align-items: center;
  font-size: inherit;
  color: var(--sl-input-icon-color);
  border: none;
  background: none;
  padding: 0;
  transition: var(--sl-transition-fast) color;
  cursor: pointer;
}
.input__clear:hover,
.input__password-toggle:hover {
  color: var(--sl-input-icon-color-hover);
}
.input__clear:focus,
.input__password-toggle:focus {
  outline: none;
}

.input--empty .input__clear {
  visibility: hidden;
}